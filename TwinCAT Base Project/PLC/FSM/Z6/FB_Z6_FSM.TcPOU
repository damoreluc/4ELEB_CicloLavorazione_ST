<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Z6_FSM" Id="{d93bc223-e386-0ccc-0756-92d817d9bf1d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Z6_FSM
VAR_INPUT
	bEnable		:	BOOL;
	bAck		:	BOOL;
	bStop		:	BOOL;
	bI9			:	BOOL;
	stParams	:	ST_Z6_Params;	
END_VAR
VAR_IN_OUT
	stStatus	:	ST_FSM_Status;	
END_VAR
VAR_OUTPUT
	// Digital Outputs
	bQ10		:	BOOL;
	bErr		:	BOOL;
END_VAR
VAR
	// FSM internal variables
	bInitialized	:	BOOL;
	eNewstep		:	E_Z6_Step;
	bEntryact		:	BOOL;
	fbTonStep		:	TON;
	
	fbRtStop		:	R_TRIG;
	fbRtI9			:	R_TRIG;
	bStopRequest	:	BOOL;	
	nErrId: INT;
	eErrStep: E_Z6_STEP;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInitialized THEN
	eNewstep :=  E_Z6_Step.NoStep;
	stStatus.stZ1.eStep :=  E_Z1_Step.Stop;
	bEntryact := FALSE;
	bInitialized := TRUE;	
	bErr := FALSE;
	stStatus.stZ1.eErrorStep :=  E_Z1_Step.NoStep;	
	stStatus.stZ1.nErrorId := 0;	
ELSE
	(* fronti *)
	fbRtStop(CLK:= bStop);	
	fbRtI9(CLK := bI9);
	
	(* richieste *)
	IF fbRtStop.Q THEN
		bStopRequest := TRUE;
	END_IF; 

	(* disabilitata o avaria *)
	IF NOT bEnable THEN
		eNewstep := E_Z6_Step.NeOrError;
	END_IF;
	
	(* aggiornamento dello stato *)
	IF eNewstep <>  E_Z6_Step.NoStep THEN
		stStatus.stZ6.eStep := eNewstep;
		eNewstep :=  E_Z6_Step.NoStep;
		bEntryact := FALSE;
	END_IF;	
	
	IF stStatus.bFailure THEN
		eNewstep := E_Z6_Step.NeOrError;
	END_IF
	
	(* switch - case della MSF *)
	CASE stStatus.stZ6.eStep OF
	// To be done...
	//STOP
	E_Z6_Step.Stop	:
	
	//entry act
	IF NOT bEntryact THEN
		bErr := TRUE;
		bEntryact := TRUE;
	END_IF
	
	bQ10	:=	FALSE;
	bErr	:= 	FALSE;
	
	IF(stStatus.tStepTime > stParams.tStopDelay) THEN
		eNewStep	:=	E_Z6_Step.Ready;
	END_IF
		
	//READY
	E_Z6_Step.Ready	:
	
	bQ10	:=	FALSE;
	bErr	:= 	FALSE;
	
	IF (NOT(bStopRequest) AND stStatus.stZ5.eStep = E_Z5_Step.WaitZ6Ready) THEN
		eNewStep	:=	E_Z6_Step.Loading;
	ELSIF bStopRequest THEN
		eNewStep := E_Z6_Step.Stop;
	END_IF
	
	//LOADING
	E_Z6_Step.Loading	:
	
	bQ10	:=	TRUE;
	bErr	:= 	FALSE;
	
	IF (NOT(bStopRequest) AND fbrtI9.Q) THEN
		eNewStep	:=	E_Z6_Step.WaitUnloading;
	ELSIF bStopRequest THEN
		eNewStep := E_Z6_Step.Stop;
	END_IF
	
	//WAIT_UNLOADING
	E_Z6_Step.WaitUnloading	:
	
	bQ10	:=	FALSE;
	bErr	:= 	FALSE;
	
	IF (NOT(fbrtI9.Q)) THEN
		eNewStep	:=	E_Z6_Step.Done;
	END_IF
	
	
	E_Z6_Step.Done	:
	
	bQ10	:=	FALSE;
	bErr	:= 	FALSE;
	
	eNewStep := E_Z6_Step.Ready;
	
	//NEORERROR
	E_Z6_Step.NeOrError	:
	
	IF NOT bEntryact THEN
		bErr := TRUE;
		bEntryact := TRUE;
	END_IF
	
	bQ10	:=	FALSE;
	bErr	:= 	TRUE;
	
	IF (bAck) THEN
		eNewStep	:=	E_Z6_Step.Recovering;
	END_IF
	
	//exit act
	IF eNewStep <> E_Z1_Step.NoStep THEN
			nErrId := 0;
			eErrStep := E_Z6_Step.NoStep;
	END_IF	
	
	//RECOVERING
	E_Z6_Step.Recovering	:
	
	bQ10	:=	FALSE;
	bErr	:= 	FALSE;
	
	eNewStep	:=	E_Z6_Step.Stop;
	
	ELSE
			eNewstep :=  E_Z6_Step.NeOrError;
			stStatus.stZ6.eErrorStep :=  E_Z6_Step.Unknown;			
			stStatus.stZ6.nErrorId := 16#0006_9999;	
	END_CASE
	
	(* call FBs *)
	
	(* tempo di permanenza nello step *)
	fbTonStep(IN := (eNewstep =  E_Z6_Step.NoStep), PT := T#500H);
	stStatus.stZ6.tStepTime := fbTonStep.ET;	
	
END_IF	]]></ST>
    </Implementation>
    <LineIds Name="FB_Z6_FSM">
      <LineId Id="3" Count="28" />
      <LineId Id="241" Count="3" />
      <LineId Id="32" Count="3" />
      <LineId Id="159" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="228" Count="0" />
      <LineId Id="196" Count="2" />
      <LineId Id="195" Count="0" />
      <LineId Id="77" Count="6" />
      <LineId Id="229" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="95" Count="0" />
      <LineId Id="98" Count="4" />
      <LineId Id="105" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="107" Count="8" />
      <LineId Id="106" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="117" Count="6" />
      <LineId Id="116" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="127" Count="4" />
      <LineId Id="126" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="164" Count="2" />
      <LineId Id="163" Count="0" />
      <LineId Id="139" Count="5" />
      <LineId Id="137" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="272" Count="2" />
      <LineId Id="236" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="147" Count="5" />
      <LineId Id="146" Count="0" />
      <LineId Id="38" Count="11" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>